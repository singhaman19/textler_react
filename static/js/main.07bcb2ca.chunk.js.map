{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","placeholder","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","filter","element","length","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gMAGe,SAASA,EAAOC,GAC3B,OACI,8BACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,KAA3D,KAAd,SACV,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,WAAW,eAAa,OAAOE,KAAK,IAAjD,sBAMJ,sBAAKF,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,QAA7D,SAAd,UACJ,uBAAOD,UAAU,mBAAmBI,KAAK,WAAWE,QAASP,EAAMQ,WAAYC,KAAK,SAASH,GAAG,2BAChG,uBAAOL,UAAU,mBAAmBS,QAAQ,yBAA5C,iCAEI,uBAAMT,UAAU,SAAhB,UACE,uBAAOA,UAAU,oBAAoBI,KAAK,SAASM,YAAY,SAAS,aAAW,WACnF,wBAAQV,UAAU,yBAAyBI,KAAK,SAAhD,iCCzBO,SAASO,EAASZ,GAC7B,IAmCJ,EAAsBa,mBAAS,KAA/B,mBAAOC,EAAP,KAAaC,EAAb,KAEI,OACI,mCACA,sBAAKd,UAAU,YAAYe,MAAO,CAACC,MAAmB,SAAbjB,EAAME,KAAc,QAAQ,SAArE,UACA,6BAAKF,EAAMkB,UACf,sBAAKjB,UAAU,OAAf,UACJ,0BAAUA,UAAU,eAAekB,MAAOL,EAAMM,SAtBvB,SAACC,GAElBN,EAAQM,EAAMC,OAAOH,QAoB4CH,MAAO,CAACO,gBAA6B,SAAbvB,EAAME,KAAc,UAAU,QAAQe,MAAmB,SAAbjB,EAAME,KAAc,QAAQ,SAAUS,YAAY,kBAAmBL,GAAG,QAAQkB,KAAK,MAClO,wBAAQvB,UAAU,4BAA4BM,QApCtB,WAChB,IAAIkB,EAAQX,EAAKY,cACjBX,EAAQU,GACRzB,EAAM2B,UAAU,0BAA0B,YAiClD,kCACA,wBAAQ1B,UAAU,4BAA4BM,QA9BtB,WAChB,IAAIkB,EAAQX,EAAKc,cACjBb,EAAQU,GACRzB,EAAM2B,UAAU,0BAA0B,YA2BlD,kCACA,wBAAQ1B,UAAU,4BAA4BM,QAdhB,WACtB,IAAIkB,EAAQX,EAAKe,MAAM,QACvBd,EAAQU,EAAQK,KAAK,OAY7B,iCACA,wBAAQ7B,UAAU,4BAA4BM,QAtBvB,WACf,IAAIO,EAAKiB,SAASC,eAAe,SACjClB,EAAKmB,SACLC,UAAUC,UAAUC,UAAUtB,EAAKK,OACnCY,SAASM,eAAeC,kBACxBtC,EAAM2B,UAAU,sBAAuB,YAiB/C,uBACA,wBAAQ1B,UAAU,4BAA4BM,QA/CnB,WAEnBQ,EADY,IAEZf,EAAM2B,UAAU,iBAAiB,YA4CzC,2BAIA,sBAAK1B,UAAU,iBAAf,UACI,mDACA,8BAAIa,EAAKe,MAAM,OAAOU,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQC,UAAaA,OAArE,KAA+E3B,EAAK2B,OAApF,iBACA,8BAAI,KAAM3B,EAAKe,MAAM,KAAKU,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQC,UAAaA,OAAzE,mBACA,yCACA,4BAAI3B,YCzDO,SAAS4B,EAAM1C,GAK1B,OACI,qBAAKgB,MAAO,CAAC2B,OAAQ,QAArB,SACA3C,EAAM4C,OAAS,8BACX,sBAAK3C,UAAS,sBAAiBD,EAAM4C,MAAMvC,KAA7B,gCAAiEI,KAAK,QAApF,UACN,iCARe,SAACoC,GACd,IAAMC,EAAMD,EAAKjB,cACjB,OAAOkB,EAAMC,OAAO,GAAGrB,cAAcoB,EAAME,MAAM,GAOlDC,CAAWjD,EAAM4C,MAAMvC,QAFlB,KAGML,EAAM4C,MAAMM,IAC5B,wBAAQ7C,KAAK,SAASJ,UAAU,YAAY,kBAAgB,QAAQ,aAAW,iBC2ClEkD,MA9Cf,WACE,MAAwBtC,mBAAS,WAAjC,mBAAOX,EAAP,KAAakD,EAAb,KACA,EAA0BvC,mBAAS,MAAnC,mBAAO+B,EAAP,KAAcS,EAAd,KACM1B,EAAW,SAAC2B,EAASjD,GAC3BgD,EAAS,CACPH,IAAKI,EACLjD,KAAMA,IAERkD,YAAW,WACTF,EAAS,QACR,OAeH,OACE,qCAED,cAACtD,EAAD,CAAQK,MAAM,UAAUF,KAAMA,EAAMM,WAhBlB,WACP,YAAPN,GACDkD,EAAQ,QACRrB,SAASyB,KAAKxC,MAAMO,gBAAgB,UACpCI,EAAU,uBAAuB,aAGjCyB,EAAQ,WACRrB,SAASyB,KAAKxC,MAAMO,gBAAgB,QACpCI,EAAU,wBAAwB,eAQrC,cAACe,EAAD,CAAOE,MAAOA,IACd,qBAAK3C,UAAU,iBAAf,SAMK,cAACW,EAAD,CAAUM,QAAQ,kCAAkChB,KAAMA,EAAMyB,UAAWA,UCnCpE8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASC,eAAe,SAM1ByB,K","file":"static/js/main.07bcb2ca.chunk.js","sourcesContent":["import React from 'react'\r\n//import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/*<li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">About Us</Link>\r\n        </li>*/}\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-5`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n      <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-danger\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleclearclick=() =>{\r\n        let newText='';\r\n        setText(newText)\r\n        props.showAlert(\"Screen Cleared\",\"success\");\r\n\r\n        //console.log(\"Clear Text was Clicked\");\r\n    }\r\n    const handleUpclick=() =>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Upper Case\",\"success\");\r\n\r\n        //console.log(\"UpperCase was Clicked\");\r\n    }\r\n    const handleloclick=() =>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lower Case\",\"success\");\r\n        //console.log(\"LowerCase was Clicked\");\r\n    }\r\n    const handleonchange=(event) =>{\r\n        //console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n    const handleCopy = () =>{\r\n        var text=document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied to Clipboard\", \"success\");\r\n    }\r\n    const handleExtraSpaces = () =>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n    }\r\nconst [text, setText]=useState(' ');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n    <div className=\"mb-3\">\r\n<textarea className=\"form-control\" value={text} onChange={handleonchange}style={{backgroundColor:props.mode==='dark'?'#13466e':'white',color:props.mode==='dark'?'white':'black'}} placeholder=\"Enter text here\"  id=\"mybox\" rows=\"8\"></textarea>\r\n<button className=\"btn btn-primary mx-2 my-3\" onClick={handleUpclick}>Convert To Uppercase</button> \r\n<button className=\"btn btn-primary mx-2 my-3\" onClick={handleloclick}>Convert To Lowercase</button>\r\n<button className=\"btn btn-primary mx-2 my-3\" onClick={handleExtraSpaces}>Remove Extra Spaces</button> \r\n<button className=\"btn btn-primary mx-2 my-3\" onClick={handleCopy}>Copy Text</button> \r\n<button className=\"btn btn-primary mx-2 my-3\" onClick={handleclearclick}>Clear Text</button> \r\n\r\n\r\n</div>\r\n<div className=\"container my-2\">\r\n    <h2>Your Text Summary</h2>\r\n    <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}, {text.length} characters</p>\r\n    <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes Read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text}</p>\r\n</div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word) =>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n       {props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>\r\n      {capitalize(props.alert.type)} \r\n      </strong>: {props.alert.msg}\r\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","//import logo from './logo.svg';\nimport './App.css';\n//import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './Components/Alert';\n//import ReactDOM from \"react-dom\";\n//import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('warning');\n  const [alert, setAlert] = useState(null)\n  const showAlert =(message, type) =>{\n  setAlert({\n    msg: message,\n    type: type\n  })\n  setTimeout(() => {\n    setAlert(null)\n  }, 1500);\n  }\n  const toggleMode = () =>{\n    if(mode==='warning'){\n      setMode('dark')\n      document.body.style.backgroundColor='#13466e';\n      showAlert(\"Dark Mode Is Enabled\",\"success\");\n    }\n    else{\n      setMode('warning')\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode Is Enabled\",\"success\");\n\n    }\n  }\n  return (\n    <>\n    {/*<Router>*/}\n   <Navbar title=\"Textler\" mode={mode} toggleMode={toggleMode}/>\n   <Alert alert={alert}/>\n   <div className=\"container my-3\" >\n  {/* <Switch>*/}\n       {/* <Route exact path=\"/about\">\n          <About mode={mode}/>\n        </Route>*/}\n        {/*<Route exact path=\"/\">*/}\n        <TextForm heading=\"Enter The Text To Analyse Below\" mode={mode} showAlert={showAlert}/>\n        {/*</Route>*/}\n      {/*</Switch></Router>*/}\n   {/*<About/>*/}\n   </div>\n   {/*</Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}